import React from "react";
import "./styles.css";

const Item = (props) => (
  <li className={props.item.completed ? "item-completed" : "" + "flex"}>
    {" "}
    <SelectMenu />
    <span
      className="item"
      onClick={() => {
        props.handleClick();
      }}
    >
      {" "}
      {props.isClicked ? (
        <form onSubmit={e => e.preventDefault}>
          {" "}
          <input
            type="text"
            value={props.newText}
            onChange={(e) => props.handleChange(props.item, e.target.value)}
          />
        </form>
      ) : (
        props.item.value
      )}
    </span>
    <button onClick={() => props.handleToggle(props.item)}>Togggle</button>{" "}
    <button onClick={() => props.handleRemove(props.item)}>Remove</button>
  </li>
);

const SelectMenu = (props) => (
  <div>
    <label for="priority"></label>
    <select name="priority">
      {" "}
      <option> Low </option>
      <option> Medium </option>
      <option> High </option>
    </select>
  </div>
);

const List = (props) => (
  <ul>
    {props.list.map((item) => (
      <Item
        key={item}
        item={item}
        isEditing={props.isEditing}
        isClicked={props.isClicked}
        newText={props.newText}
        handleSubmit={props.handleSubmit}
        handleChange={props.handleChange}
        handleToggle={props.handleToggle}
        handleRemove={props.handleRemove}
        handleClick={props.handleClick}
        handleNewTextEdit={props.handleNewTextEdit}
      />
    ))}
  </ul>
);

class Search extends React.Component {
  render() {
    return (
      <input
        type="text"
        onChange={this.props.handleSearch}
        value={this.props.searchValue}
      />
    );
  }
}

class Form extends React.Component {
  state = {
    inputValue: ""
  };

  handleChange = (e) => {
    this.setState({ inputValue: e.target.value });
  };

  handleSubmit = (e) => {
    e.preventDefault();
    const value = this.state.inputValue;
    this.setState({ inputValue: "" });
    this.props.handleSubmit(value);
  };

  render() {
    return (
      <form className="input-container" action="" onSubmit={this.handleSubmit}>
        <input
          type="text"
          onChange={this.handleChange}
          value={this.state.inputValue}
        />
      </form>
    );
  }
}

class App extends React.Component {
  state = {
    list: [],
    searchValue: "",

    isClicked: true,
    isEditing: false,
    newText: ""
  };

  handleChange = (value) => {
    this.setState({ newText: value });
    console.log(this.state.newText);
  };

  handleSubmit = (value) => {
    const item = {
      value,
      completed: false,
      id: ` ${Math.random()} - ${Math.random()} `
    };

    const newList = [...this.state.list, item];
    this.setState({ list: newList , isClicked: !this.state.isClicked});
  };

  handleToggle = (item) => {
    const newList = this.state.list.map((element) => {
      if (element.id === item.id) {
        element.completed = !element.completed;
      }
      return element;
    });
    this.setState({ list: newList });
  };

  handleRemove = (item) => {
    const filteredList = this.state.list.filter((element) => {
      if (element.id !== item.id) {
        return element;
      }
    });
    this.setState({ list: filteredList });
  };

  handleSearch = (e) => {
    this.setState({ searchValue: e.target.value });
  };

  handleClick = () => {
    this.setState((prevState) => ({
      isEditing: !prevState.isEditing,
      isClicked: !this.state.isClicked
      
    }));
  };

  render() {
    return (
      <div className="App">
        <Form handleSubmit={this.handleSubmit} />

        <Search
          searchValue={this.state.searchValue}
          handleSearch={this.handleSearch}
        />
        <List
          list={this.state.list.filter((item) =>
            item.value.toLowerCase().includes(this.state.searchValue)
          )}
          isClicked={this.state.isClicked}
          isEditing={this.state.isEditing}
          handleToggle={this.handleToggle}
          handleSubmit={this.handleSubmit}
          handleRemove={this.handleRemove}
          handleClick={this.handleClick}
          handleChange={this.handleChange}
          handleNewTextEdit={this.handleNewTextEdit}
        />
      </div>
    );
  }
}

export default App;
