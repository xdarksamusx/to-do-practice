import React from "react";
import "./styles.css";

const Item = (prop) => {
  return (
    <div>
      {" "}
      <button> toggle </button> <button> remove </button>
    </div>
  );
};

const List = ({items , isEditing, handleInput, handleClick, handleKeyPress, editedValue}) => {
  return (
    <ul>
      {items.map((item, index) => (
        <li key={index}>
        
          {item.isEditied  ? <input  onChange={ (e) => handleInput (e.target.value, index)} onKeyPress={handleKeyPress(e, index)} value={editedValue}/> :  <span  onClick={handleClick(index)}>{item.key} </span>}
         
              
         
          <Item />
        </li>
      ))}
    </ul>
  );
};
////
class Form extends React.Component {
  render() {
    return (
      <div>
        <form onSubmit={this.props.handleSubmit}>
          {" "}
          <input
            onChange={(e) => this.props.handleChange(e.target.value)}
            value={this.props.value}
          />
        </form>
      </div>
    );
  }
}

class App extends React.Component {
  state = {
    items: [],
    searchValue: "",


    isClicked: false,
    isEditing: false,
    inputItem: "",
    editedValue: "",
    
  };

  handleChange = (value) => {
    this.setState({ inputItem: value });
  };

  handleClick = (index) => {

    const itemsCopy = [...this.state.items]
    itemsCopy[index].isEdited =  true


    



    this.setState({items: itemsCopy})
    
  };

  handleKeyPress =  (e, index) => {
    if (e.key === "Enter") {
      const itemsCopy = [...this.state.items]
      itemsCopy[index].isEdited =  false
      
      this.setState({items: itemsCopy})
    }
  }

  handleSubmit = (event) => {
    event.preventDefault();
    const newItem = {key: this.state.inputItem}
     
    const updatedItems = [...this.state.items, newItem];

    this.setState({ items: updatedItems, inputItem: "" });

    console.log(this.state.items);
  };

  handleSubmit2 =  (event) => {
    event.preventDefault();

   
  };

  handleInput = (changedValue, index) => {
    const copyOfItems = [...this.state.items];
    const newObject = {key: changedValue, isEdited: true}
     copyOfItems[index] = newObject
    this.setState({ items: copyOfItems, editedValue: changedValue });
    console.log(this.state.items)
  };

  render() {
    return (
      <div className="App">
        <Form
          handleChange={this.handleChange}
          handleSubmit={this.handleSubmit}
          value={this.state.inputItem}
        />
        <List
        editedValue = {this.state.editedValue}
          items={this.state.items}
          isEditing = {this.state.isEditing}
          handleChange = {this.handleChange}
          handleKeyPress = {this.handleKeyPress}

          handleClick={this.handleClick}
          handleInput={this.handleInput}
        />
      </div>
    );
  }
}

export default App;
